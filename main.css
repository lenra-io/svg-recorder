*, *::before, *::after {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    color: inherit;
    text-decoration: none;
    list-style: none;
    transition-duration: 300ms;
    transition-property: none;
}

:root {
    --base: 8pt;
    --primary-color: #1269ED;
    --primary-color-hover: #0D4DAE;
    --text-color-rgb: 30, 35, 44;
    --text-color: rgba(var(--text-color-rgb), 1);
    --background-color-rgb: 255, 255, 255;
    --background-color: rgba(var(--background-color-rgb), 1);
    --font-size: var(--base) * 1.5;
    --seprataion-size: 2;
    --title-size: calc(12pt * 2 * 1.4 + 8pt * 2);
}

html, body {
    height: 100%;
}

body {
    font-family: 'Arial';
    font-size: var(--font-size);
    line-height: calc(2 * var(--base) / var(--font-size));
    text-align: center;
    background-color: var(--background-color);
    color: var(--text-color);
}

h1 {
    padding: 8pt;
    box-shadow: 0px 4px 16px rgba(var(--text-color-rgb), 0.25), 0px 1px 8px rgba(var(--background-color-rgb), 0.15);
    font-size: 200%;
}

form {
    position: relative;
    width: 90%;
    max-width: 300pt;
    max-height: calc(100% - var(--title-size));
    top: calc((100% - var(--title-size)) / 2);
    margin: auto;
    padding: calc(var(--seprataion-size) * var(--base)) 0;
    overflow: hidden;
    transform: translateY(-50%);
    transition-property: max-height, padding, top, transform, margin-bottom;
}

.recording > form {
    max-height: 0;
    padding: 0;
    top: 0;
    transform: translate(0);
    margin-bottom: calc(var(--seprataion-size) * var(--base));
}

label {
    display: block;
    opacity: 0.7;
    margin-bottom: calc(var(--seprataion-size) * var(--base));
}

label:focus-within {
    opacity: 1;
}

input,select {
    display: block;
    width: 100%;
    font-size: inherit;
    line-height: inherit;
    text-align: inherit;
    background: transparent;
    border: none;
    border-bottom: 1pt solid;
    outline: none;
    margin-top: calc(var(--base) / 2);
}

label[for=svg] {
    --svg-label-height: 200px;
    position: relative;
    margin: calc((100vh - var(--title-size) - var(--seprataion-size) * var(--base) - var(--svg-label-height)) / 2) 0;
    height: var(--svg-label-height);
    border: 4pt dashed;
    border-radius: calc(var(--seprataion-size) * var(--base));
    transition-property: margin, height;
}

label[for=svg].choosen {
    --svg-label-height: 100px;
    margin-top: 0px;
    margin-bottom: calc(var(--seprataion-size) * var(--base));
}

label[for=svg]::before {
    content: "Choose SVG file";
}

label[for=svg] > input {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    opacity: 0;
    margin: 0;
    z-index: 1;
}

label[for=svg] > img {
    max-width: 100%;
    max-height: 100%;
    display: none;
}

label[for=svg] > img[src] {
    display: initial;
}

label[for=svg]::before,
label[for=svg] > img {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

body > img {
    position: absolute;
    right: 100%;
}

/* Buttons */
button {
    display: inline-block;
    text-align: center;
    font-weight: bold;
    background-color: var(--primary-color);
    color: white;
    border: none;
    width: 100%;
    padding: calc(var(--base) * 1.5) calc(var(--base) * 4);
    border-radius: calc(var(--base) / 2);
    transition-property: background-color;
}

button:hover {
    background-color: var(--primary-color-hover);
}


@media (prefers-color-scheme: dark) {
    :root {
        --background-color-rgb: 30, 35, 44;
        --text-color-rgb: 255, 255, 255;
    }
}
